spring.application.name=Blog
### Database config
spring.datasource.url=${DATA_SOURCE_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
### Email config
spring.mail.default-encoding=UTF-8
spring.mail.host=smtp.gmail.com
spring.mail.username=${MAIL_USERNAME}
#Create your app password with other (custom name)
#https://myaccount.google.com/u/1/apppasswords
spring.mail.password=${MAIL_PASSWORD}
spring.mail.port=587
spring.mail.protocol=smtp
spring.mail.test-connection=false
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
### File config
project.upload-file.base-uri=${PROJECT_UPLOAD_FILE_BASE_URI}
project.upload-file.base-preview-uri=previews/
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=20MB
### Jwt Config
secrect-key=${SECRET_KEY}
jwt.access-token-valid-in-seconds=86400
jwt.refresh-token-valid-in-seconds=86400
### Front end
FRONT_END_URL=${FRONT_END_URL}
BACK_END_URL=${BACK_END_URL}
### Google sign in
spring.security.oauth2.client.registration.google.client-id=323100414451-eq0v1vtngn4hsesi3livabh65tlf9vqo.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${BACK_END_URL}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=profile,email
### Cloudinary config
cloudinary.cloud_name=${CLOUDINARY_NAME}
cloudinary.api_key=${CLOUDINARY_KEY}
cloudinary.api_secret=${CLOUDINARY_SECRET}